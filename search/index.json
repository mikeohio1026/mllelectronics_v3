[{"content":"Download: pdf\nSeeking a full time position after December 2021.\nMichael Liang Skills  Rapid Prototyping PCB Design (KiCAD, Eagle) 2D CAD (AutoCAD, NanoCAD) 3D CAD (SolidWorks, Fusion 360) Soldering (SMT rework, through-hole) 3D Printing and Additive manufacturing LabView MATLAB Microcontrollers (STM32, AVR/Atmel, PIC) Programming (C, Python)  Professional Experience ELECTRICAL ENGINEERING CO-OP, Toast Inc, Boston MA, Jun 2021 - August 2021\n Fabricated a fully custom automated robotic hardware testing platform based on the ESP32 microcontroller. Worked closely with a cross disciplinary team of engineers to create detailed specifications for an upcoming tablet. Collaborated with ODM/JDM manufacturing vendors through out the product development lifecycle. Analyzed and reviewed designs with multiple high speed signals such as MIPI, LVDS, gigabit ethernet and USB C. Technologies Utilized: ESP32, Python, Fusion 360, RF Explorer, and PADs viewer.  ELECTRICAL ENGINEERING CO-OP, WARDJet, Tallamadge OH, May 2020 - May 2021\n Designed and implemented multiple data collection and analysis systems to assist with root cause analysis of clogs in cutting operations. Utilized metrics from sensors such as accelerometers, moisture sensors and piezoelectric microphones to assist with product development road map. Technologies Utilized: Python, Digital Signal Processing,Raspberry Pi, and MATLAB.  UNIVERISITY OF AKRON UNDERGRADUTE RESEARCH, LTA Research \u0026amp; Exploration, Akron Ohio, Sep 2018 - March 2019\n Worked closely with a multidisciplinary team to develop custom rapid prototyping and fabrication solutions for a innovative Unmanned Aircraft System. Retrofitted new safety equipment, maintained, and calibrated a 300 watt industrial laser cutter. Maintained a print farm of over 15 industrialgrade 3d printers which ran 24/7. Technologies Utilized: SolidWorks 2018, Simplify3D, Octoprint, and RDWorks laser controller software.  SUMMIT COUNTY ENGINEER\u0026rsquo;S OFFICE, Engineering Intern, Akron Ohio, Jul 2018 - Sep 2018\n Assisted with drafting of plans in AutoCAD and learned industry standard engineering draw practices. Technologies Used: AutoCAD Civil 3D 2013, ArcGIS (mapping software)  Projects Keyboard Warrior: A custom built STM32F303 keyboard running the QMK firmware.\n Goal: design and make a modular mechanical keyboard with ability to extend functionality over i2c (number pad, OLED display, etc) Schematic and board routing was done in KiCAD. With attention paid to crystal oscillator design, USB differential pair layout, and power supply design. Mechanical design was done in SolidWorks. A custom stacked aluminum case design was chosen due to simplicity and ability to easily fabricate.  LMS3990 CNC Conversion: A custom CNC Mill\n Electronics consist of Mach 3 breakout board, custom high current stepper drivers based on TMC5160 driver with encoder feedback, and a spindle speed controller. Mechanically designed in SolidWorks. Converted from linear lead screws to a C7 grade ballscrew system with custom made motor mounts.  HAkron Public Relations Officer: Akron’s Official College Hackathon Group\n Worked on expanding and engaging with engineering student organizations on campus in order to teach basic programming and electronics. Hosted HAkron 4K a hackathon which is a 24 hour invention marathon that encourages creativity, innovation, learning and engineering. Worked closely with a team to manage 80+ students and lead the electronics hardware team. Mentored several teams, organized access to the Bounce Innovation hub makerspace, and gained experience in teaching troubleshooting to non-technical individuals.  ","date":"2021-10-03T00:00:00Z","image":"https://mllelectronics.com/p/michael-liang-resume-2021/bizCard_huba0653cdcda9d6628d64647913a8ee3a_133594_120x120_fill_q75_box_smart1.jpg","permalink":"https://mllelectronics.com/p/michael-liang-resume-2021/","title":"Michael Liang - Resume 2021"},{"content":"Introduction to Keyboard Warrior This a page about the Keyboard Warrior which was my Senior Project for my Electrical and Electronic engineering degree at the University of Akron.\nHardware Layout \u0026amp; Design Considerations The badge is based on STM32F303RET6 processor which has 26 I/O, builtin 512kB of flash memory, 80kB of RAM, and operates at 3.3 volts with a max clock frequnecy of 72 MHz. Communication and debug on this board consisted of DFU (Device Firmware Update) via USB C and a SWD(Serial Wire debug) port. This project was split into two parts one being the main devboard that had STM32F303 and a daughter board being a keyboard with deattachable accessories. The fimware on the board is the QMK (Quantum Mechnical keyboard) and is very customizable. Some highlights regarding design include the pogo pin connector for modular attachments via I2C bus, design for high USB connection, crystal oscillator and power supply layout.\n Keyboard Warrior Block Diagram \nThe block diagram outlines what I envisioned as the ultimate modular mechanical keyboard that has a wide variety of attachments that would fit any situtation. With the addition of an I2C bus on the keyboard this would allow for a variety of expansions but the main focus for this project was the Numeric Keypad module as it was most realistic given the time frame for this project. Schematics are included below and are broken into a uC development module, the main keyboard and the attachment keyboard.\n Crystal Oscillator Layout   STM32 Clock Configurator \nThe crystal oscillator layout was an area that I focused on when designing the dev board. The ST Microelectronics AN2867 application note was very informative on the design of Pierce oscillators which are critical to the ensuring stable and reliable operation from the microcontroller. The goal of this design was to generate a 48 MHz clock which was required by the USB protocol. STM32 Cube IDE has a Clock Frequency configurator which validated my selection of the J49SMH which is 8 MHZ quartz oscillator at ±30ppm with a load capacitance of 12 pF.\n USB C - Differential Routing   Power Supply Design \nThe USB C protcool requires that signal runs be as short as possible and the data line pairs be differentially routed as to minimize issues with signal quality. Note that USB ESD protection chip was also placed inline with the STM32F303 microcontroller. Thought was also put into my DRC rules and power supply design.\n Finalized Component Layout   Keyboard Warrior Mechanical Render \nThis layout is a standard microcontroller layout that follows sound engineering practices that emphasize stability, functionality and reliable design.\nMechanical Design The case is made of combination of 1/16th and 3/16th stacked 6061 aluminum that sandwhiches the main keyboard circuit board. It utilzes Torx screws to hold the everything together. All CAD modeling was done in Solidworks 2020 to make sure that everything fit and CAM was done with the WardCAM software. One the biggest challanges was cutting out the 1/16\u0026quot; 6061 on the waterjet as cutting materials under 1/8\u0026quot; is difficult due the turbulence of the jet stream flexing the thin metal plate.\n Keyboard Warrior Mechanical Stackup \n Keyboard Assembly Time \n Full Keyboard   Keyboard attachment \nSoftware Used  KiCad V5.1 - PCB Schematic and Electronic Design Software STM32 Cube IDE - PLL Clock configurator and intial testing of STM32F303 Solidworks 2019 - Mechanical design software WardCAM - Waterjet custom case   Prepped for Flashing with STM32 Cube IDE \nLessons Learned  Don\u0026rsquo;t underestimate the time it takes to write embedded software Tolerance stacks matter and header pins add height which need to be accounted for  Future Plans  Keyboard Warrior V2 - Builtin USB 3.0 Hub, RGB back light and new 80% keyboard layout Continue development on the I2C bus code and additional acessories  ","date":"2021-04-28T00:00:00Z","image":"https://mllelectronics.com/p/keyboard-warrior/stm32_complete_hu6dd7ed0bcc175564937ceaac420271ca_254600_120x120_fill_q75_box_smart1.jpg","permalink":"https://mllelectronics.com/p/keyboard-warrior/","title":"Keyboard Warrior"},{"content":"Introduction to the GCC Mercury This a page about the GCC Mercury II laser which is a 30 Watt CO2 laser that has build area of 12\u0026quot;x24\u0026quot;. Parts are still available for this laser however they are becoming rare as time goes on. The purpose of this page is provide reference materials for future owners and operators of this machine.\nHardware Overview The controller is a custom controller made by GCC Mercury and is nearing the end of its useful life.\nLaser Details Its the 30 Watt RF excited CO2 Laser made by Synrad. The exact model we have on the laser is the J48-S2 tube which has date code of September 2005. The laser is still running strong at 28.7 watts when measured with my PW250 - Laser Power Wizard.\nMirrors The mirrors are as follows.\n x1 - 25mm diameter silicon mirror x2 - 20mm diameter silicon mirror x1 - 19mm diameter ZnSe with 50.8mm or 2\u0026quot; focal length   Old Mirrors - 20mm Diameter   Old Focus Lense - 19mm ZNSE at 2\u0026quot; focal length \nMirror selection is critical for ensuring that you are receiving the maxium output power of the laser tube. The laser will have significant power loss. It is highly recommended that you utlize Si mirrors which are silicon glass gold plated mirrors and treat them as yearly consumables.\nSoftware Needed to Run  Vector Editing software - Inkscape preferred Corel Draw - Any version above version 2.0 GCC Mercury II Laser Driver - needed to print and works with Corel Draw  Future Plans  Add a more detailed maintenance procedure Publish a material chart with power  ","date":"2020-08-20T00:00:00Z","permalink":"https://mllelectronics.com/p/gcc-laser-reference/","title":"GCC Laser Reference"},{"content":"Introduction to Hackathons This a page is a curated selection of hackathon projects that I\u0026rsquo;ve worked on over my 3+ years at the University of Akron. Most of the hacks on this page are hardware based. A large majority of my hacks involve rapid prototyping techniques such as 3d printing, laser cutting and development with the Arduino and ESP32 platforms. As hardware hackers it is not uncommon to carry around a large box of hardware so as a group we decided to build Auto Tank a robotic pack mule for hackathons as featured below.\nHAkron 4K - Leading the Hardware Team As a HAkron officer, I got to work with the awesome people at HAkron to put together this amazing weekend of hacking and making at the Bounce Innovation Hub. My primary responsiblty was managing the hardware which meant teams could approach us with unqiue hardware challanges or requests for intresting components. It was amazing getting to see the creativity, ingentuity and passion people brought with their projects. I was able to help over 20+ students build a wide variety of hardware projects over a 24 hour time span.\nHAkron 3000 - Nifty Cakes Worked with a team to convert a CoreXY 3d printer into a custom baked good frosting robot. A stepper driven mechanism was designed and printed by the printer. Which was then transformed it a baked goods decorating machine. This unique project was a great deep dive into customization with hardware and firmware on the Creality 3d printer board.\nWon Most Complex Hardware Hack  Nifty Cakes Stepper Motor Assembly  Completed Nifty Cakes Robot \nMakeHarvard 2021: Compliant Prosthetic Finger Design The prosthetic finger utilizes compliant flexure joints culminating in a mechanism with naturalistic finger kinematics that has the benefits of: a reduced parts count (a \u0026ldquo;print-in-place\u0026rdquo; design), being light-weight and cost effectiveness \u0026ndash; make it more accessible and practical for the millions of amputees in low socioeconomic situations.\nWon Best Hardware Hack\n Full Rendering of Hand  3D of A Finger Joint \n CAD Rendering of Finger Joint \nMakeHarvard 2020: Auto-safety for the Autonomous Auto-safety for the Autonomous is prototype reinforcement learning platform that utilzes custom software and a laser cut RC car. To demo this idea, we built a custom laser cut acrylic RC car with an Arduino and ESP32. We used an array of HC-SR04 ultrasonic sensors to measure distances from each edge of the robot. OpenAI Gym was used to build a custom physics engine and environment for this vehicle, and ran the learning algorithm on Google\u0026rsquo;s Deep Learning VM. It can be shown in both simulation and the real-world how the algorithm can be used to reject unsafe actions and replace them with safe ones, preventing collisions and preserving the robot.\n Auto-safety for the Autonomous Robot \nKent Hack Enough 2019 - Respondash Respon-dash is unique product that utilizes a visual alerting system. Using a light sensor, Respon-dash\u0026rsquo;s outer component is on the look out for flashing lights, like those from a police car, behind the vehicle. If flashing lights are detected, then it sends a \u0026lsquo;ping\u0026rsquo; to Respon-dash\u0026rsquo;s inner component, which flashes briefly in the driver\u0026rsquo;s peripheral vision, alerting them to a potential situation that they may need to respond to. Respon-dash is built with two Arduino Unos, a pair of NRF24L01 wireless modules, a photo resistor, KY-037 sound detection sensor, and a Neo Pixel Indicator LED.\nWon Best Hardware Hack\n Render of the Respondash System \nLessons Learned from Hackathons  Have Fun! It\u0026rsquo;s awesome getting to work with a wide variety of people and really build something cool. Not everything is going to go right the first time. So plan ahead and set aside more time than you think you need for troubleshooting/debug. Bringing together a great team and learning something new is more important than winning.  ","date":"2020-02-15T00:00:00Z","image":"https://mllelectronics.com/p/hackathons/mike_hackathon_hu43d0ea22958600f4666d27a5d5b545ce_83104_120x120_fill_q75_box_smart1.jpg","permalink":"https://mllelectronics.com/p/hackathons/","title":"Hackathons"},{"content":"Introduction to the Blimp Badge This a page about the Blimp Badge which is a Atmega328p based badge made for the Sophmore career fair at UAkron to showcase my skills in embedded systems design, circuit layout and programming. The badge features a .96\u0026quot; I2C OLED that outputs a QR code my website mllelectronics.com which has my resume and project portfolio on it.\nHardware Layout \u0026amp; Design Considerations The badge is based on Atmega328P and utilzes the internal 8mHz clocking running on 3.3V. Power is provided by a the MIC5219-3.3 LDO regulator. The chosen display was a generic .96\u0026quot; I2C OLED module powered by the SSD1306 CMOS display driver. All components were surface mount with all of them being 1206 sized in order to make everything hand solderable.\nSome interesting design choices that were made such as utilzing the internal clock and the usage of AAA batteries. The internal clock was utilzed as it would have reduced component count and complexity of the design. Normally it would be preferable to have an external clock provides precise timing and accuracy which are needed in asynchronous protocols such as UART or implementation of high speed protocols such as USB. However since I was only utilzing a single I2C bus which is synchronous. AAA batteries were utilized as they easily available and not prone to challanges faced by utilizing a LIPO based battery system.\n Blimp V1 Badge Schematic \nSoftware Used  KiCad V5.1 - PCB Schematic and Electronic Design Software Arduino IDE - AVR as ISP to program the board Solidworks 2019 - Mechanical design software Inkscape - Vector graphics editor to design blimp shape  Lessons Learned There were several lessons learned with this project as I had tight timeline to produce and finish this before the Fall 2019 career fair at UAkron.\n Check if your I2C device has pull up resistors and design in zero ohm resistors to fix if necessary. Ensure that core components such as the processor are in stock and are purchased before starting schematic and PCB layout Converting between a Bitmap image to Vector graphic is difficult but extremely rewarding when done  Future Plans  Make a revision 2 of the Blimp Badge Add an external clock circuit so that additional sensors can be utilized. Add an ESP8266 module for wireless capability  ","date":"2020-01-20T00:00:00Z","image":"https://mllelectronics.com/p/blimp-badge/blimp_badge_render_hu34acf9d591f091ce4f034d36ab0fece7_315022_120x120_fill_q75_box_smart1.jpg","permalink":"https://mllelectronics.com/p/blimp-badge/","title":"Blimp Badge"}]